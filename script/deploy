#!/bin/bash

set -e # Exit with nonzero exit code if anything fails

# Pull requests and commits to other branches shouldn't try to deploy
if [ "$TRAVIS_PULL_REQUEST" != "false" -o "$TRAVIS_BRANCH" != "$GH_SOURCE_BRANCH" ]; then
    echo "Skipping deploy."
    exit 0
fi

# Git informations
GH_SHA=`git rev-parse --verify HEAD`

# Now let's go have some fun with the cloned repo
echo "Navigating to deploy"
cd deploy
echo "Setting Git username and email"
git config user.name ${GH_USERNAME}
git config user.email ${GH_EMAIL}

# TODO: Make a non-compressed branch where we do the diff and then start the compression if that's the case
# # If there are no changes to the deploy (e.g. this is a README update) then just bail.
# if [ -z `git diff --exit-code` ]; then
#     echo "No changes on this push; exiting deploy."
#     exit 0
# fi

# Commit the "changes", i.e. the new version.
# The delta will show diffs between new and old versions.
echo "Adding all changes and committing"
git add --all .
git commit -m "Deployment ${GH_SHA}"

# Now that we're all set up, we can push.
echo "Pushing changes to the target branch on repo"
git push ${GH_REPO} ${GH_TARGET_BRANCH}
